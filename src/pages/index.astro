    ---
    import Layout from '../layouts/Layout.astro';
    import Footer from '../components/Footer.astro';
    ---
    <link rel="icon" type="image/png" href="/favicon.png">

    <div class="hero">
        <img src="/public/logobw.png" alt="Logo" class="logo">
    </div>

    <Layout>
        <div class="contain">
            <div>
                <!-- Image Upload Button -->
                <button id="imgButton" class="button">Upload Image</button>
                <input id="ifileInput" type="file" accept="image/png, image/jpeg" class="hidden" onchange="handleFileUpload(event)" />

                <!-- Image Output -->
                <div id="output"></div>
                <div id="json"></div>

              




<script>
document.getElementById("file-upload").addEventListener("change", function (event) {
    const file = event.target.files[0];
    if (!file) return;

    const reader = new FileReader();
    reader.onload = function (e) {
        try {
            const jsonData = JSON.parse(e.target.result);
            displayFoodItems(jsonData.foodItems);
        } catch (error) {
            console.error("Invalid JSON file:", error);
        }
    };
    reader.readAsText(file);
});

function displayFoodItems(foodItems) {
    const container = document.getElementById("food-container");
    container.innerHTML = ""; // Clear previous entries

    foodItems.forEach(item => {
        const div = document.createElement("div");
        div.style.border = "1px solid #ccc";
        div.style.padding = "10px";
        div.style.borderRadius = "5px";
        div.style.textAlign = "center";
        
        div.innerHTML = `<strong>${item.name}</strong><br>Calories: ${item.calories}`;
        container.appendChild(div);
    });
}
</script>


            </div>
        </div>
    </Layout>   

    <div>
        <Footer />
    </div>

    <style>
        /* BUTTON STYLES */
        .button {

            margin: 10px auto;
            color: #000;
            background-color: #f7f6f13a;
            border: 2px solid #bfc4bf;
            padding: 12px 20px;
            font-size: 16px;
            font-weight: 600;
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease-in-out;
            text-align: center;
            width: 100%;
            max-width: 300px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.147);
        }

        .button:hover {
        
            border-color: #A3B18A;
            background: linear-gradient(45deg, #A3B18A,#80a280);
            border-radius: 20px;
            animation: gradientAnimation 2s ease infinite;
            transform: scale(1.05);
            box-shadow: 0 4px 20px #94a775;
        }

        .button:active {
            background-color: #A3B18A;
        }

        /* HERO SECTION */
        .hero {
            width: 100%;
            height: 280px;
            background: linear-gradient(0deg, #aef6d4, #588157, #d5c47d);
            background-size: 400% 400%;
            animation: gradientAnimation 20s ease infinite;
            display: flex;
            align-items: center;
            justify-content: center;
            box-sizing: border-box;
            border-radius: 20px;
        }

        @keyframes gradientAnimation {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        /* LOGO */
        .logo {
            max-width: 35%;
            height: auto;
        }

        /* PAGE LAYOUT */
        html {
            background-color: #111111;
            font-family: Roboto, sans-serif;
        }

        .contain {
            padding: 5%;
            margin: auto;
            max-width: 90%;
            width: 100%;
            text-align: center;
        }

        .shift {
            transform: translateY(-40px);
        }

        /* FILE INPUT */
        .hidden {
            display: none;
        }

        /* FILE PREVIEW */
        #output {
            margin-top: 20px;
        }

        #output img {
            max-width: 100%;
            height: auto;
            margin-top: 10px;
        }
        /* Recipe Item Styles */
.recipe-item {
    margin-top: 20px;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 8px;
    background-color: #f9f9f9;
}

.recipe-card {
    margin-bottom: 20px;
    padding: 15px;
    border: 1px solid #ccc;
    border-radius: 8px;
    background-color: #fff;
}

.recipe-card img {
    max-width: 100%;
    height: auto;
    border-radius: 5px;
}

.recipe-card h3 {
    margin-top: 10px;
    font-size: 1.5em;
    color: #333;
}

.recipe-card ul, .recipe-card ol {
    margin-top: 10px;
    padding-left: 20px;
}

.recipe-card li {
    margin-bottom: 5px;
}
    </style>
<script>
    const serverUrl = "https://eedd-142-244-6-66.ngrok-free.app/upload"; 
    
    document.getElementById("imgButton").addEventListener("click", function () {
        document.getElementById("ifileInput").click();
    });

    document.getElementById("ifileInput").addEventListener("change", function (event) {
        const file = event.target.files[0];
        if (file) {
            if (file.type === "image/png" || file.type === "image/jpeg") {
                uploadFile(file);
            } else {
                alert("Unsupported file type. Please upload a PNG or JPEG image.");
            }
        }
    });
    
    function uploadFile(file) {
        const formData = new FormData();
        formData.append("image", file);
    
        fetch(serverUrl, {
            method: "POST",
            body: formData,
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    displayUploadedImage(data.file_url); // Show uploaded image
                }
                displayDishOptions(data); // Show dish options
            })
            .catch(error => {
                console.error("Upload Error:", error);
                alert("Failed to upload image or process response.");
            });
    }
    
    function displayUploadedImage(imageUrl) {
        const outputDiv = document.getElementById("output");
        outputDiv.innerHTML = ""; // Clear previous content

        const imageElement = document.createElement('img');
        imageElement.src = imageUrl;
        imageElement.alt = "Uploaded Image";
        imageElement.style.maxWidth = '100%';
        imageElement.style.maxHeight = '400px';
        imageElement.style.borderRadius = '10px';
        imageElement.style.boxShadow = "0 4px 8px rgba(0,0,0,0.2)";
        
        outputDiv.appendChild(imageElement);
    }

    function displayDishOptions(data) {
        const container = document.getElementById("output");
        container.innerHTML = ""; // Clear previous content

        const dishRow = document.createElement('div');
        dishRow.style.display = "flex";
        dishRow.style.justifyContent = "center";
        dishRow.style.gap = "20px";
        dishRow.style.marginTop = "20px";

        data.forEach((item, index) => {
            const dishCard = document.createElement('div');
            dishCard.style.width = "250px";
            dishCard.style.textAlign = "center";
            dishCard.style.padding = "15px";
            dishCard.style.borderRadius = "10px";
            dishCard.style.boxShadow = "0 4px 8px rgba(0,0,0,0.2)";
            dishCard.style.background = "#fff";

            const dishTitle = document.createElement('h3');
            dishTitle.textContent = item.guess;
            dishTitle.style.color = "#333";

            const dishImage = document.createElement('img');
            dishImage.src = item.recipes[0].image; // First recipe image as a preview
            dishImage.alt = item.guess;
            dishImage.style.width = "100%";
            dishImage.style.borderRadius = "8px";
            dishImage.style.boxShadow = "0 2px 5px rgba(0,0,0,0.1)";

            const viewButton = document.createElement('button');
            viewButton.textContent = "View Recipes";
            viewButton.style.marginTop = "10px";
            viewButton.style.padding = "10px";
            viewButton.style.border = "none";
            viewButton.style.borderRadius = "5px";
            viewButton.style.background = "#588157";
            viewButton.style.color = "white";
            viewButton.style.cursor = "pointer";
            viewButton.onclick = () => displayRecipeDetails(item);

            dishCard.appendChild(dishTitle);
            dishCard.appendChild(dishImage);
            dishCard.appendChild(viewButton);

            dishRow.appendChild(dishCard);
        });

        container.appendChild(dishRow);
    }

    function displayRecipeDetails(dish) {
        const container = document.getElementById("output");
        container.innerHTML = ""; // Clear dish options

        const backButton = document.createElement('button');
        backButton.textContent = "Back to Dish Selection";
        backButton.style.marginBottom = "15px";
        backButton.style.padding = "10px";
        backButton.style.border = "none";
        backButton.style.borderRadius = "5px";
        backButton.style.background = "#FF5733";
        backButton.style.color = "white";
        backButton.style.cursor = "pointer";
        backButton.onclick = () => displayDishOptions([dish]);

       

        dish.recipes.forEach(recipe => {
            const recipeCard = document.createElement('div');
            recipeCard.style.marginBottom = "20px";
            recipeCard.style.padding = "15px";
            recipeCard.style.borderRadius = "10px";
            recipeCard.style.boxShadow = "0 4px 8px rgba(0,0,0,0.2)";
            recipeCard.style.background = "#fff";

            const recipeTitle = document.createElement('h2');
            recipeTitle.textContent = recipe.title;
            recipeTitle.style.color = "#444";
            
            const recipeImage = document.createElement('img');
            recipeImage.src = recipe.image;
            recipeImage.alt = recipe.title;
            recipeImage.style.maxWidth = '100%';
            recipeImage.style.borderRadius = '8px';

            const ingredientsTitle = document.createElement('h4');
            ingredientsTitle.textContent = "Ingredients:";

            const ingredientsList = document.createElement('ul');
            recipe.ingredients.forEach(ingredient => {
                const listItem = document.createElement('li');
                listItem.textContent = `${ingredient.name}: ${ingredient.amount}`;
                ingredientsList.appendChild(listItem);
            });

            const instructionsTitle = document.createElement('h4');
            instructionsTitle.textContent = "Instructions:";

            const instructionsList = document.createElement('ol');
            recipe.instructions.forEach(instruction => {
                const listItem = document.createElement('li');
                listItem.textContent = instruction.step;
                instructionsList.appendChild(listItem);
            });

            recipeCard.appendChild(recipeTitle);
            recipeCard.appendChild(recipeImage);
            recipeCard.appendChild(ingredientsTitle);
            recipeCard.appendChild(ingredientsList);
            recipeCard.appendChild(instructionsTitle);
            recipeCard.appendChild(instructionsList);

            container.appendChild(recipeCard);
        });
    }
</script>
